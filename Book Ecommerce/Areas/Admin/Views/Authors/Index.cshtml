@model IEnumerable<AuthorVM>
@{
    ViewData["Title"] = "Quản lý tác giả";
    var pagingModel = ViewBag.pagingModel as PagingModel ?? new PagingModel();
    var pageSizes = ViewBag.pageSizes as List<PageSizeModel>;
}
<!-- DataTales Example -->
<div class="card shadow">
    <div class="card-header py-3 text-primary">
        <h4 class="m-0 font-weight-bold text-primary">Quản lý tác giả</h4>
    </div>
    <div class="card-header py-2">
        <div class="row">
            <div class="col-sm-6 col-xl-8 py-1">
                <a id="createAuthor" class="btn btn-primary" data-toggle="modal" data-target="#formModal">
                    <i class="fas fa-plus"></i>
                    Thêm mới
                </a>
            </div>
            <div class="col-sm-6 col-xl-4 d-flex py-1">
                <div class="search mr-2">
                    <form class="form-inline mr-auto w-100 navbar-search"
                          asp-action="Index" asp-controller="Authors" asp-area="Admin" method="get">
                        <div class="input-group">
                            <input type="text" name="search" class="form-control bg-light border-1 small"
                                   placeholder="Tìm theo tên" aria-label="Search"
                                   aria-describedby="basic-addon2" value="@ViewBag.search">
                            <div class="input-group-append">
                                <button class="btn btn-primary" type="submit">
                                    <i class="fas fa-search fa-sm"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
                <partial name="_PageSizeAdminPartial" model="@pageSizes"></partial>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead class="bg-primary text-light">
                    <tr>
                        <th>Mã tác giả</th>
                        <th>Tên tác giả</th>
                        <th>Slug</th>
                        <th>Số lượng sản phẩm</th>
                        <th>Thông tin tác giả</th>
                        <th>Hình ảnh</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var urlImage = item.UrlImage == null ? "/contents/Photos/No_Image_Available.jpg" : item.UrlImage;
                        <tr>
                            <td>
                                <a style="cursor: pointer" data-authorid="@item.AuthorId" class="edit-author" data-toggle="modal" data-target="#formModal">
                                    @item.AuthorCode
                                </a>
                            </td>
                            <td>@item.AuthorName</td>
                            <td>@item.AuthorSlug</td>
                            <td>@item.SumProduct</td>
                            <td>@item.Information</td>
                            <td>
                                <img class="img-author-admin" src="@urlImage" />
                            </td>
                            <td>
                                <a data-authorcode="@item.AuthorCode" data-authorid="@item.AuthorId" style="cursor: pointer" class="delete-author">Xóa</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="d-flex justify-content-center">
                <partial name="_PagingAdminPartial" model="@pagingModel"></partial>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="formModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="titleForm">Thêm mới</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="errorMessage" class="text-danger"></div>
                <div class="form-group">
                    <label for="recipient-name" class="col-form-label">Tên tác giả</label>
                    <input type="text" class="form-control" id="authorName">
                </div>
                <div class="form-group">
                    <label for="message-text" class="col-form-label">Thông tin tác giả</label>
                    <textarea class="form-control" id="information"></textarea>
                </div>
                <div class="form-group">
                    <label class="col-form-label">Hình ảnh</label>
                    <input type="file" class="form-control" id="fileImage">
                </div>
                <img id="imagePreview" src="/contents/Photos/No_Image_Available.jpg" style="width: 150px; height: 150px; object-fit: cover" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                <button id="btnFunc" type="button" class="btn btn-primary">Thêm</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        var func = 'create'
        var authorId = ''
        var srcImg = ''
        $(document).ready(function () {
            $('#fileImage').change(function (e) {
                var file = e.target.files[0];
                var reader = new FileReader();

                reader.onload = function (e) {
                    if (e.target.result) {
                        $('#imagePreview').attr('src', e.target.result);
                    }
                };
                if (file) {
                    reader.readAsDataURL(file);
                } else {
                    $('#imagePreview').attr('src', srcImg)
                }
            });
            $('#createAuthor').click(function () {
                $('#titleForm').text('Thêm mới')
                $('#btnFunc').text('Thêm mới')
                srcImg = '/contents/Photos/No_Image_Available.jpg'
                $('#imagePreview').attr('src', srcImg)
                func = 'create'
                refreshForm()
            })
            $('.edit-author').click(function () {
                $('#titleForm').text('Sửa')
                $('#btnFunc').text('Cập nhật')
                func = 'update'
                refreshForm()
                authorId = $(this).data('authorid')
                $('#loader').show()
                $.ajax({
                    url: '@Url.Action("Detail", "Authors", new { area = "Admin" })' + `?authorId=${authorId}`,
                    type: "GET",
                    catch: false,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        console.log(response)
                        $('#loader').hide()
                        srcImg = response.urlImage;
                        if (srcImg == null)
                            srcImg = '/contents/Photos/No_Image_Available.jpg'
                        $('#authorName').val(response.authorName)
                        $('#information').val(response.information)
                        $('#imagePreview').attr('src', srcImg)
                    },
                    error: function (response) {
                        console.log(response)
                        $('#loader').hide()
                        var message = ""
                        if (response.status == 401)
                            message = "Yêu cầu bạn đăng nhập để thực hiện chức năng này";
                        else if (response.status == 403)
                            message = "Tài khoản của bạn không thể thực hiện chức năng này";
                        else {
                            message = response.responseJSON.mesClient
                        }
                        var toast = $(RenderHtmlToastError(message))
                        $('.m-toast-box').append(toast)
                        HideToastAfterShow(toast)
                    }
                })
            })
            $('#btnFunc').click(function () {
                var formData = new FormData()
                formData.append('AuthorName', $('#authorName').val())
                formData.append('Information', $('#information').val())
                formData.append('FileImage', $('#fileImage')[0].files[0])
                if (func == 'create') {
                    $('#loader').show()
                    $.ajax({
                        url: '@Url.Action("Create", "Authors", new { area = "Admin" })',
                        type: "POST",
                        data: formData,
                        catch: false,
                        contentType: false,
                        processData: false,
                        success: function (response) {
                            console.log(response)
                            $('#loader').hide()
                            $('#errorMessage').html("")
                            window.location.href = '@Url.Action("Index", "Authors", new
                            {
                                area = "Admin",
                                search = ViewBag.search,
                                page = pagingModel.currentpage,
                                pagesize = ViewBag.pagesize
                            })'
                        },
                        error: function (response) {
                            console.log(response)
                            $('#loader').hide()
                            $('#errorMessage').html("")
                            var message = ""
                            if (response.status == 401)
                                message = "Yêu cầu bạn đăng nhập để thực hiện chức năng này";
                            else if (response.status == 403)
                                message = "Tài khoản của bạn không thể thực hiện chức năng này";
                            else {
                                if (response.responseJSON.isValid == false) {
                                    var err = ""
                                    for (var i = 0; i < response.responseJSON.error.length; i++) {
                                        err += `<p>${response.responseJSON.error[i]}</p>`
                                    }
                                    $('#errorMessage').html(err)
                                }
                                message = response.responseJSON.mesClient
                            }
                            var toast = $(RenderHtmlToastError(message))
                            $('.m-toast-box').append(toast)
                            HideToastAfterShow(toast)
                        }
                    })
                }
                if (func == 'update') {
                    $('#loader').show()
                    $.ajax({
                        url: '@Url.Action("Update", "Authors", new { area = "Admin" })' + `?authorId=${authorId}`,
                        type: "POST",
                        data: formData,
                        catch: false,
                        contentType: false,
                        processData: false,
                        success: function (response) {
                            console.log(response)
                            $('#loader').hide()
                            $('#errorMessage').html("")
                            window.location.href = '@Url.Action("Index", "Authors", new
                            {
                                area = "Admin",
                                search = ViewBag.search,
                                page = pagingModel.currentpage,
                                pagesize = ViewBag.pagesize
                            })'
                        },
                        error: function (response) {
                            console.log(response)
                            $('#loader').hide()
                            $('#errorMessage').html("")
                            var message = ""
                            if (response.status == 401)
                                message = "Yêu cầu bạn đăng nhập để thực hiện chức năng này";
                            else if (response.status == 403)
                                message = "Tài khoản của bạn không thể thực hiện chức năng này";
                            else {
                                if (response.responseJSON.isValid == false) {
                                    var err = ""
                                    for (var i = 0; i < response.responseJSON.error.length; i++) {
                                        err += `<p>${response.responseJSON.error[i]}</p>`
                                    }
                                    $('#errorMessage').html(err)
                                }
                                message = response.responseJSON.mesClient
                            }
                            var toast = $(RenderHtmlToastError(message))
                            $('.m-toast-box').append(toast)
                            HideToastAfterShow(toast)
                        }
                    })
                }
            })
            $('.delete-author').click(function () {
                var authorCode = $(this).data('authorcode')
                if (!confirm(`Bạn có muốn xóa tác giả ${authorCode}`))
                    return
                authorId = $(this).data('authorid')
                $('#loader').show()
                $.ajax({
                    url: '@Url.Action("Delete", "Authors", new { area = "Admin" })' + `?authorId=${authorId}`,
                    type: "POST",
                    catch: false,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        console.log(response)
                        $('#loader').hide()
                        window.location.href = '@Url.Action("Index", "Authors", new
                        {
                            area = "Admin",
                            search = ViewBag.search,
                            page = pagingModel.currentpage,
                            pagesize = ViewBag.pagesize
                        })'
                    },
                    error: function (response) {
                        console.log(response)
                        $('#loader').hide()
                        var message = ""
                        if (response.status == 401)
                            message = "Yêu cầu bạn đăng nhập để thực hiện chức năng này";
                        else if (response.status == 403)
                            message = "Tài khoản của bạn không thể thực hiện chức năng này";
                        else {
                            message = response.responseJSON.mesClient
                        }
                        var toast = $(RenderHtmlToastError(message))
                        $('.m-toast-box').append(toast)
                        HideToastAfterShow(toast)
                    }
                })
            })
        })
        function refreshForm() {
            $('#authorName').val('')
            $('#information').val('')
            $('#errorMessage').html('')
        }
        function HideToastAfterShow(toast) {
            setTimeout(function () {
                // tạo hiệu ứng
                toast.addClass('hidden')
                // sau đó ẩn
                setTimeout(function () {
                    toast.remove()
                }, 1000)
            }, 5000)
        }
        function RenderHtmlToastError(message) {
            return `<div class="m-toast-message m-toast-error">
                                <div class="m-toast-icon">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                                <div class="m-toast-text">${message}</div>
                                <div class="m-toast-close">
                                    <i class="fas fa-times"></i>
                                </div>
                            </div>`
        }
        function RenderHtmlToastSuccess(message) {
            return `<div class="m-toast-message m-toast-success">
                                <div class="m-toast-icon">
                                    <i class="fas fa-check-circle"></i>
                                </div>
                                        <div class="m-toast-text">${message}</div>
                                <div class="m-toast-close">
                                    <i class="fas fa-times"></i>
                                </div>
                            </div>`
        }
    </script>
}
